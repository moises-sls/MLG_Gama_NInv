identify(di, n=2, tolerance=2)
4/50
#
plot(fitted(fit.model),td,xlab="Valor Ajustado", ylab="Res?duo Componente do Desvio",
ylim=c(b-1,a+1),pch=16)
#
plot(fitted(fit.model),td,xlab="Valor Ajustado", ylab="Res?duo Componente do Desvio",
ylim=c(b-1,a+1),pch=16)
abline(2,0,lty=2)
abline(-2,0,lty=2)
#       attach(dados)
#       source("envel_gama")
#
# A sa?da ser? o gr?fico de envelope para o res?duo componente
# do desvio padronizado. Para colocar um t?tulo no gr?fico use
# o comando title("..."). Para  usar  outras  liga??es mudar
# no programa abaixo o termo family=Gamma(link=log) para
# family=Gamma no caso de liga??o  rec?proca ou por
# family= Gamma(link=identity) no caso de liga??o identidade.
#------------------------------------------------------------#
X <- model.matrix(fit.model)
n <- nrow(X)
p <- ncol(X)
w <- fit.model$weights
W <- diag(w)
H <- solve(t(X)%*%W%*%X)
H <- sqrt(W)%*%X%*%H%*%t(X)%*%sqrt(W)
h <- diag(H)
ro <- resid(fit.model,type="response")
fi <- (n-p)/sum((ro/(fitted(fit.model)))^ 2)
td <- resid(fit.model,type="deviance")*sqrt(fi/(1-h))
#
e <- matrix(0,n,100)
#
for(i in 1:100){
resp <- rgamma(n,fi)
resp <- (fitted(fit.model)/fi)*resp
fit <- glm(resp ~ X, family=Gamma(link=identity))
w <- fit$weights
W <- diag(w)
H <- solve(t(X)%*%W%*%X)
H <- sqrt(W)%*%X%*%H%*%t(X)%*%sqrt(W)
h <- diag(H)
ro <- resid(fit,type="response")
phi <- (n-p)/sum((ro/(fitted(fit)))^ 2)
e[,i] <- sort(resid(fit,type="deviance")*sqrt(phi/(1-h)))}
#
e1 <- numeric(n)
e2 <- numeric(n)
#
for(i in 1:n){
eo <- sort(e[i,])
e1[i] <- (eo[2]+eo[3])/2
e2[i] <- (eo[97]+eo[98])/2}
#
med <- apply(e,1,mean)
faixa <- range(td,e1,e2)
par(pty="s")
qqnorm(td, xlab="Percentil da N(0,1)",
ylab="Componente do Desvio", ylim=faixa, pch=16, main="")
par(new=TRUE)
#
qqnorm(e1,axes=F,xlab="",ylab="",type="l",ylim=faixa,lty=1, main="")
par(new=TRUE)
qqnorm(e2,axes=F,xlab="",ylab="", type="l",ylim=faixa,lty=1, main="")
par(new=TRUE)
qqnorm(med,axes=F,xlab="", ylab="", type="l",ylim=faixa,lty=2, main="")
4/11
abline(4/11,0)
abline(4/11,0)
X
abline(4/(n-p-1),0)
n
p
50-4
4/46
plot(fitted(fit.model),h,xlab="Valor Ajustado", ylab="Medida h", pch=16)
identify(fitted(fit.model), h, n=2, tolerance=2)
#
plot(di,xlab="?ndice", ylab="Dist?ncia de Cook", pch=16)
identify(di, n=2, tolerance=2)
#
plot(fitted(fit.model),td,xlab="Valor Ajustado", ylab="Res?duo Componente do Desvio",
ylim=c(b-1,a+1),pch=16)
#
plot(fitted(fit.model),td,xlab="Valor Ajustado", ylab="Res?duo Componente do Desvio",
ylim=c(b-1,a+1),pch=16)
abline(2,0,lty=2)
abline(-2,0,lty=2)
#identify(fitted(fit.model),td, n=1)
#
w <- fit.model$weights
eta <- predict(fit.model)
z <- eta + resid(fit.model, type="pearson")/sqrt(w)
plot(predict(fit.model),z,xlab="Preditor Linear",
ylab="Vari?vel z", pch=16)
par(mfrow=c(1,1))
qqnorm(td, xlab="Percentil da N(0,1)",
ylab="Componente do Desvio", ylim=faixa, pch=16, main="")
par(new=TRUE)
#
qqnorm(e1,axes=F,xlab="",ylab="",type="l",ylim=faixa,lty=1, main="")
par(new=TRUE)
qqnorm(e2,axes=F,xlab="",ylab="", type="l",ylim=faixa,lty=1, main="")
par(new=TRUE)
qqnorm(med,axes=F,xlab="", ylab="", type="l",ylim=faixa,lty=2, main="")
summary(glm(dados[-49,]$tempo ~ dados[-49,]$tipo, family=Gamma(link=identity), data=dados[-49,]))
dados = melt(dados, value.name="tempo",  variable.name = "vari치vel",
measure.vars = c("V2", "V4", "V6", "V8", "V10"))
dados = read.table("turbina.txt")
dados = melt(dados, value.name="tempo",  variable.name = "vari치vel",
measure.vars = c("V2", "V4", "V6", "V8", "V10"))
dados$tipo = rep(1:5, each=10)
dados = select(dados, tipo, tempo)
dados$tipo = factor(dados$tipo, levels=c("1", "2",'3','4','5'),
labels=c("tipo1", 'tipo2', 'tipo3', 'tipo4', 'tipo5'))
dados = select(dados, tipo, tempo)
dados = read.table("turbina.txt")
dados = melt(dados, value.name="tempo",  variable.name = "vari치vel",
measure.vars = c("V2", "V4", "V6", "V8", "V10"))
dados$tipo = rep(1:5, each=10)
dados = select(dados, tipo, tempo)
dados$tipo = factor(dados$tipo, levels=c("1", "2",'3','4','5'),
labels=c("tipo1", 'tipo2', 'tipo3', 'tipo4', 'tipo5'))
dados = select(dados, dados$tipo, dados$tempo)
# library(reshape2)
# library(dplyr)
library(tidyverse)
dados = select(dados, dados$tipo, dados$tempo)
dados = select(dados, tipo, tempo)
dados$tipo = factor(dados$tipo, levels=c("1", "2",'3','4','5'),
labels=c("tipo1", 'tipo2', 'tipo3', 'tipo4', 'tipo5'))
################################################################################
# estatisticas descritivas:
tapply(dados$tempo, dados$tipo, mean)
tapply(dados$tempo, dados$tipo, sd)
cv = function(x) {
(sd(x) / mean(x))*100
}
tapply(dados$tempo, dados$tipo, cv)
View(dados)
# library(reshape2)
library(dplyr)
dados = read.table("turbina.txt")
dados = melt(dados, value.name="tempo",  variable.name = "vari치vel",
measure.vars = c("V2", "V4", "V6", "V8", "V10"))
View(dados)
dados$tipo = rep(1:5, each=10)
dados = select(dados, tipo, tempo)
dados = dplyr::select(dados, tipo, tempo)
View(dados)
dados$tipo = factor(dados$tipo, levels=c("1", "2",'3','4','5'),
labels=c("tipo1", 'tipo2', 'tipo3', 'tipo4', 'tipo5'))
glm(formula = dados[-49, ]$tempo ~ dados[-49, ]$tipo, family = Gamma(link = identity),
data = dados[-49, ])
summary(glm(formula = dados[-49, ]$tempo ~ dados[-49, ]$tipo, family = Gamma(link = identity),
data = dados[-49, ]))
fit.model = glm(dados$tempo ~ dados$tipo, family=Gamma(link=identity), data=dados)
summary(fit.model)
dados = read.table("pesca.txt", header=T)
View(dados)
dados = read.table("pesca.txt", header=T)
View(dados)
plot(cpue)
plot(dados$cpue)
hist(dados$cpue)
library(MASS)
library(tidyverse)
dados %>% ggplot(aes(frota, cpue)) + geom_boxplot() + xlab("Frota") + theme_bw
dados %>% ggplot(aes(frota, cpue)) + geom_boxplot() + xlab("Frota") + theme_bw()
dados %>% ggplot(aes(frota, cpue)) + geom_boxplot(col='grey') + xlab("Frota") + theme_bw()
dados %>% ggplot(aes(frota, cpue)) + geom_boxplot(fill='grey') + xlab("Frota") + theme_bw()
dados$trimestre = factor(dados$trimestre)
dados$frota = factor(dados$frota)
dados$ano = factor(dados$ano)
dados %>% ggplot(aes(cpue)) + geom_density() + theme_bw()
dados %>% ggplot(aes(cpue)) + geom_density()+
scale_x_continuous(limits=c(-3, 33)) + theme_bw()
dados %>% ggplot(aes(cpue)) + geom_density()+
scale_x_continuous(limits=c(-3, 600)) + theme_bw()
dados %>% ggplot(aes(cpue)) + geom_density()+
scale_x_continuous(limits=c(-30, 700)) + theme_bw()
dados %>% ggplot(aes(cpue)) + geom_density()+
scale_x_continuous(limits=c(-40, 700)) + theme_bw()
dados %>% ggplot(aes(cpue)) + geom_density()+
scale_x_continuous(limits=c(-50, 700)) + theme_bw()
dados %>% ggplot(aes(cpue)) + geom_density(lwd=1)+
scale_x_continuous(limits=c(-50, 700)) + theme_bw()
dados %>% ggplot(aes(cpue)) + geom_density(lwd=1) + ylab("Densidade") +
scale_x_continuous(limits=c(-50, 700)) + theme_bw()
dados %>% ggplot(aes(cpue)) + geom_density(lwd=1) + ylab("Densidade") +
scale_x_continuous(limits=c(-50, 700)) + theme_bw()
dados %>% ggplot(aes(frota, cpue)) + geom_boxplot(fill='grey') +
xlab("Frota") + theme_bw()
dados %>% ggplot(aes(cpue)) + geom_density(lwd=1) + ylab("Densidade") +
geom_hline(0) + scale_x_continuous(limits=c(-50, 700)) + theme_bw()
dados %>% ggplot(aes(cpue)) + geom_density(lwd=1) + ylab("Densidade") +
geom_hline(yintercept=0) + scale_x_continuous(limits=c(-50, 700)) + theme_bw()
dados %>% ggplot(aes(cpue)) + geom_density(lwd=0.8) + ylab("Densidade") +
geom_hline(yintercept=0) + scale_x_continuous(limits=c(-50, 700)) + theme_bw()
dados %>% ggplot(aes(cpue)) + geom_density(lwd=0.8) + ylab("Densidade") +
geom_hline(yintercept=0) + scale_x_continuous(limits=c(-50, 700)) + theme_bw()
dados %>% ggplot(aes(frota, cpue)) + geom_boxplot(fill='grey') +
xlab("Frota") + theme_bw()
dados %>% ggplot(aes(frota, cpue)) + geom_boxplot(fill='grey') +
xlab("Frota") + geom_text(aes(label= ifelse(cpu>470, as.character()))) + theme_bw()
dados %>% ggplot(aes(frota, cpue)) + geom_boxplot(fill='grey') +
xlab("Frota") + geom_text(aes(label= ifelse(cpue>470, as.character()))) + theme_bw()
identify(dados %>% ggplot(aes(frota, cpue)) + geom_boxplot(fill='grey') +
xlab("Frota") + geom_text(aes(label= ifelse(cpue>470, as.character()))) + theme_bw())
aaa = dados %>% ggplot(aes(frota, cpue)) + geom_boxplot(fill='grey') +
xlab("Frota") + geom_text(aes(label= ifelse(cpue>470, as.character()))) + theme_bw()
aaa
aaa = dados %>% ggplot(aes(frota, cpue)) + geom_boxplot(fill='grey') +
xlab("Frota") + theme_bw()
aaa
identify(aaa)
identify(dados$frota, dados$cpue)
library(plotly)
require(plotly)
install.packages("plotly")
library(plotly)
ggplotly(aaa)
boxplot(dados$frota, dados$cpue)
boxplot(dados$frota ~ dados$cpue)
boxplot(dados$cpue ~ dados$frota)
identify(dados$cpu ~ dados$frota)
identify(dados$cpu ~ dados$frota, tolerance=2, n = 5)
identify(dados$cpu ~ dados$frota, tolerance=2, n = 5)
boxplot(dados$cpue ~ dados$frota)
identify(dados$cpu ~ dados$frota, tolerance=5, n = 5)
cls
dados %>% ggplot(aes(cpue)) + geom_density(lwd=0.8) + ylab("Densidade") +
geom_hline(yintercept=0) + scale_x_continuous(limits=c(-50, 700)) + theme_bw()
dados %>% ggplot(aes(frota, cpue)) + geom_boxplot(fill='grey') +
xlab("Frota") + theme_bw()
dados %>% ggplot(aes(ano, cpue)) + geom_boxplot(fill='grey') +
xlab("Frota") + theme_bw()
dados %>% ggplot(aes(trimestre, cpue)) + geom_boxplot(fill='grey') +
xlab("Trimestre") + theme_bw()
dados %>% ggplot(aes(ano, cpue)) + geom_boxplot(fill='grey') +
xlab("Ano") + theme_bw()
dados %>% ggplot(aes(trimestre, cpue)) + geom_boxplot(fill='grey') +
xlab("Trimestre") + theme_bw()
dados %>% ggplot(aes(frota, cpue)) + geom_boxplot(fill='grey') +
xlab("Frot") + facet_wrap(dados$latitude)  + theme_bw()
dados %>% ggplot(aes(frota, latitude)) + geom_boxplot(fill='grey') +
lab("Frota") + theme_bw()
dados %>% ggplot(aes(frota, latitude)) + geom_boxplot(fill='grey') +
lab("Frota") + theme_bw()
dados %>% ggplot(aes(frota, cpue)) + geom_boxplot(fill='grey') +
xlab("Frota") + theme_bw()
dados %>% ggplot(aes(frota, lat_sul)) + geom_boxplot(fill='grey') +
xlab("Frota") + theme_bw()
dados = read.table("pesca.txt", header=T)
dados$frota = factor(dados$frota)
dados$ano = factor(dados$ano)
dados$trimestre = factor(dados$trimestre)
dados %>% ggplot(aes(cpue)) + geom_density(lwd=0.8) + ylab("Densidade") +
geom_hline(yintercept=0) + scale_x_continuous(limits=c(-50, 700)) + theme_bw()
dados %>% ggplot(aes(frota, cpue)) + geom_boxplot(fill='grey') +
xlab("Frota") + theme_bw()
dados %>% ggplot(aes(ano, cpue)) + geom_boxplot(fill='grey') +
xlab("Ano") + theme_bw()
dados %>% ggplot(aes(trimestre, cpue)) + geom_boxplot(fill='grey') +
xlab("Trimestre") + theme_bw()
dados %>% ggplot(aes(frota, lat)) + geom_boxplot(fill='grey') +
xlab("Frota") + theme_bw()
dados %>% ggplot(aes(frota, long)) + geom_boxplot(fill='grey') +
xlab("Frota") + ylab("Longitude") + theme_bw()
dados %>% ggplot(aes(frota, lat)) + geom_boxplot(fill='grey') +
xlab("Frota") + ylab("Latitude") + theme_bw()
dados %>% ggplot(aes(frota, long)) + geom_boxplot(fill='grey') +
xlab("Frota") + ylab("Longitude") + theme_bw()
dados %>% ggplot(aes(cpue, lat)) + geom_point()
dados %>% ggplot(aes(lat,cpue)) + geom_point()
dados %>% ggplot(aes(lat,cpue)) + geom_point() + theme_bw()
dados %>% ggplot(aes(lat,cpue)) + geom_point() + xlab("Latitude")+ theme_bw()
dados %>% ggplot(aes(long,cpue)) + geom_point() + xlab("Longitude")+ theme_bw()
attach(dados)
fit.model = glm(cpue ~ frota + ano + trimestre + latitude + longitude,
family=Gamma(link=log))
fit.model = glm(cpue ~ frota + ano + trimestre + lat + long,
family=Gamma(link=log))
summary(fit.model)
stepAIC(fit.model)
fit.model = glm(formula = cpue ~ frota + ano + lat + long,
family = Gamma(link = log))
summary(fit.model)
fit.model = glm(cpue ~ frota + ano + trimestre + lat + long,
family=Gamma(link=log))
anova(fit.model, test="LRT")
fit.model = glm(formula = cpue ~ frota + ano + lat + long,
family = Gamma(link = log))
anova(fit.model, test="LRT")
fit.model = glm(formula = cpue ~ frota + ano + lat + long + frota*ano,
family = Gamma(link = log))
anova(fit.model, test="LRT")
fit.model = glm(formula = cpue ~ frota + ano + lat + long + frota*ano,
family = Gamma(link = log))
summary(fit.model)
fit.model = glm(cpue ~ frota + ano + trimestre + lat + long,
family=Gamma(link=log))
summary(fit.model)
44.322 - 47.041
gamma.shape(fit.model)
-2.719*3.4740871
fit.model = glm(formula = cpue ~ frota + ano + lat + long + frota*ano,
family = Gamma(link = log))
summary(fit.model)
gamma.shape(fit.model)
desvio_modelo_sem_int =  3.6780793 * 44.322 #phi * desvio dos residuos
desvio_modelo_int =  3.6780793 * 44.322 #phi * desvio dos residuos
fit.model = glm(cpue ~ frota + ano + lat + long,
family=Gamma(link=log))
summary(fit.model)
gamma.shape(fit.model)
desvio_modelo_sem_int = 3.3829507 * 48.366
48.366 - 44.322
3.6780793 * 4.044
4.044 * 3.3829507
fit0.model = glm(cpue ~ frota + ano + lat + long,
family=Gamma(link=log))
fit1.model = glm(formula = cpue ~ frota + ano + lat + long + frota*ano,
family = Gamma(link = log))
anova(fit0.model,fit1.model, test="LRT")
fit1.model = glm(formula = cpue ~ frota + ano + lat + long + frota*ano,
family = Gamma(link = log))
summary(fit1.model)
gamma.shape(fit1.model)
44.322 * 3.6780793
qchisq(163.0198, 144)
pchisq(163.0198, 144)
1 - 0.8673121
1 - 44.322/59.362
plot(fit1.model$fitted.values, ano)
plot(ano,fit1.model$fitted.values)
dados %>% ggplot(aes(ano, fitted(fit1.model))) + geom_line(aes(linetype=frota))
dados[lat==26.25]
dados %>% filter(lat >= 26)
dados %>% filter(26<= lat < 27)
dados %>% filter(26<= lat)
dados %>% filter(26<= lat & lat < 27)
dados %>% filter(26<= lat & lat < 27 & long < 47 & long > 46)
dados %>% filter(26<= lat & lat < 27 & long < 47 & long > 46) %>% ggplot(
aes(ano, fitted(fit.model))) + geom_line(aes(linetype=frota))
dados %>% filter(26<= lat & lat < 27 & long < 47 & long > 46) %>% ggplot(aes(ano, cpue))
dados %>% filter(26<= lat & lat < 27 & long < 47 & long > 46) %>%
ggplot(aes(ano, cpue)) + geom_line()
fit1.model$y
fit1.model$fitted.values
plot(fit1.model$fitted.values)
dados %>% filter(26<= lat & lat < 27 & long < 47 & long > 46)
fit1.model %>% filter(26<= lat & lat < 27 & long < 47 & long > 46)
fit1.model
fit1.model$fitted.values %>% filter(26<= lat & lat < 27 & long < 47 & long > 46)
fit.model$fitted.values
dados_estimados = data_frame()
View(dados_estimados)
dados_estimados$cpue_estimada = fit1.model$fitted.values
dados_estimados$cpue_estimada = c(fit1.model$fitted.values)
dados_estimados = data.frame(fit1.model$fitted.values)
View(dados_estimados)
dados_estimados$frota = dados$frota
dados_estimados = dados.copy()
dados_estimados = dados
View(dados_estimados)
dados_estimados$cpue_estimada = fit1.model$fitted.values
dados_estimados = dplyr::select(dados_estimados$!cpue)
dados_estimados = dplyr::select(!dados_estimados$cpue)
dados_estimados = dplyr::select(!(dados_estimados$cpue))
dados_estimados %>% select(!(cpue))
dados_estimados = dados_estimados %>% select(!(cpue))
View(dados_estimados)
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46)
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(ano, cpue_estimada)) + geom_line()
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(ano, cpue_estimada)) + geom_point()
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(ano, cpue_estimada)) + geom_point(type=frota)
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(ano, cpue_estimada)) + geom_point(fill=frota)
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(ano, cpue_estimada)) + geom_point()
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(ano, cpue_estimada, group=frota)) + geom_point()
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(ano, cpue_estimada, group=frota)) + geom_point(shape=frota)
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(cpue_estimada, group=frota)) + geom_point()
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(cpue_estimada, group=frota))
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(lat,cpue_estimada, group=frota))
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(lat,cpue_estimada, group=frota)) + geom_point()
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(ano,cpue_estimada, group=frota)) +
geom_smooth(method='glm', method.args = list(family=Gamma(link=log)))
predict(fit1.model)
predict(fit1.model, type='response')
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(ano,cpue_estimada, group=frota))
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(ano,cpue_estimada, group=frota)) + geom_point()
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(ano,cpue_estimada, group=frota)) + geom_point() +
geom_line(aes(y=cpue_estimada))
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(ano,cpue_estimada, group=frota)) + geom_point() +
geom_line(aes(y=aa))
aa = predict(fit1.model, type='response')
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(ano,cpue_estimada, group=frota)) + geom_point() +
geom_line(aes(y=aa))
aa = predict(fit1.model, type='response')
aa
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(ano,cpue_estimada, group=frota)) + geom_point() +
geom_line(aes(y=aa))
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(ano,cpue_estimada, group=frota)) + geom_point() +
geom_line(aes(y=cpue_estimada))
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(ano,cpue_estimada, group=frota)) + geom_point() +
geom_line(aes(y=cpue_estimada, linetype = frota))
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(ano,cpue_estimada, group=frota)) + geom_point() +
geom_line(aes(y=cpue_estimada), linetype = frota)
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(ano,cpue_estimada, group=frota)) + geom_point() +
geom_line(aes(y=cpue_estimada, linetype = frota))
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(ano,cpue_estimada, group=frota)) + geom_point() +
geom_line(aes(y=cpue_estimada, linetype = frota))
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46) %>%
ggplot(aes(ano,cpue_estimada, group=frota)) +
geom_line(aes(y=cpue_estimada, linetype = frota))
dados_estimados %>% filter(lat<27 & lat>=26 & long < 47 & long >=46)
dados_estimados %>%
ggplot(aes(ano,cpue_estimada, group=frota)) +
geom_line(aes(y=cpue_estimada, linetype = frota))
dados_estimados %>%
ggplot(aes(ano,cpue_estimada, group=frota)) +
geom_line(aes(y=cpue_estimada, col = frota))
dados_estimados %>% filter(lat<27 & lat>=26) %>%
ggplot(aes(ano,cpue_estimada, group=frota)) +
geom_line(aes(y=cpue_estimada, col = frota))
dados_estimados %>% filter(lat<=27 & lat>=26) %>%
ggplot(aes(ano,cpue_estimada, group=frota)) +
geom_line(aes(y=cpue_estimada, col = frota))
dados_estimados %>% filter(lat<=27 & lat>=25) %>%
ggplot(aes(ano,cpue_estimada, group=frota)) +
geom_line(aes(y=cpue_estimada, col = frota))
dados_estimados %>% filter(lat<=27) %>%
ggplot(aes(ano,cpue_estimada, group=frota)) +
geom_line(aes(y=cpue_estimada, col = frota))
dados_estimados %>% filter(lat<=27 & long<=47) %>%
ggplot(aes(ano,cpue_estimada, group=frota)) +
geom_line(aes(y=cpue_estimada, col = frota))
dados_estimados %>% filter(lat<=27 & long<=46) %>%
ggplot(aes(ano,cpue_estimada, group=frota)) +
geom_line(aes(y=cpue_estimada, col = frota))
dados_estimados %>%
ggplot(aes(lat,cpue_estimada, group=frota)) +
geom_line(aes(y=cpue_estimada, col = frota))
dados_estimados %>%
ggplot(aes(lat,cpue_estimada, group=frota)) +
geom_line(aes(y=cpue_estimada))
, col = frota
dados_estimados %>%
ggplot(aes(lat,cpue_estimada, group=frota)) +
geom_line(aes(y=cpue_estimada, col = frota))
dados_estimados %>%
ggplot(aes(long,cpue_estimada, group=frota)) +
geom_line(aes(y=cpue_estimada, col = frota))
dados_estimados %>%
ggplot(aes(long,cpue_estimada, group=frota)) +
geom_boxplot(aes(y=cpue_estimada, col = frota))
dados_estimados %>%
ggplot(aes(long,cpue_estimada, group=frota)) +
geom_boxplot(aes(y=cpue_estimada, col = frota))
dados_estimados %>%
ggplot(aes(long,cpue_estimada, group=frota)) +
geom_boxplot(col = frota))
dados_estimados %>%
ggplot(aes(long,cpue_estimada, group=frota)) +
geom_boxplot())
dados_estimados %>%
ggplot(aes(long,cpue_estimada, group=frota)) +
geom_boxplot()
dados_estimados %>%
ggplot(aes(long,cpue_estimada, group=frota)) +
geom_hist()
dados_estimados %>%
ggplot(aes(long,cpue_estimada, group=frota)) +
geom_histogram()
dados_estimados %>%
ggplot(aes(long,cpue_estimada, group=frota)) +
geom_bar()
dados_estimados %>%
ggplot(aes(long,cpue_estimada, group=frota)) +
geom_col()
dados_estimados %>%
ggplot(aes(long,cpue_estimada, group=frota)) +
geom_col(aes(fill=frota))
dados_estimados %>%
ggplot(aes(long,cpue_estimada, group=frota)) +
geom_col() + facet_wrap(frota)
dados_estimados %>% ggplot(aes(lat, cpue_estimada)) + geom_col() +
facet_wrap(frota) + theme_bw()
